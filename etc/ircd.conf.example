# juno configuration file


[ server ]
    
    network     = 'JunoDevNet'                  # network name
    name        = 'devserver.example.com'       # server name
    description = 'juno development server'     # server description
    sex         = 'male'                        # server gender
    id          = 0                             # server ID (must be completely unique)


[ api ]

    modules = ['Core', 'Resolve']               # load these modules at startup


[ database ]

    type = 'sqlite'                             # database format


[ modes: user ]

    ircop         = 'o'                         # IRC operator                      (o)
    invisible     = 'i'                         # invisible mode                    (i)
    registered    = 'r'                         # registered - Account module       (r)


[ modes: channel ]

    no_ext        = [0, 'n']                    # no external channel messages      (n)
    protect_topic = [0, 't']                    # only operators can set the topic  (t)
    moderated     = [0, 'm']                    # only voiced and up may speak      (m)
    ban           = [3, 'b']                    # channel ban                       (b)
    except        = [3, 'e']                    # ban exception                     (e)
    invite_except = [3, 'I']                    # invite-only exception             (I)
    access        = [3, 'A']                    # Access module list mode           (A)


[ prefixes ]

    owner  = ['q', '~',  2]                     # channel owner                     (q)
    admin  = ['a', '&',  1]                     # channel administrator             (a)
    op     = ['o', '@',  0]                     # channel operator                  (o)
    halfop = ['h', '%', -1]                     # channel half-operator             (h)
    voice  = ['v', '+', -2]                     # voiced channel member             (v)


[ users ]

    automodes = '+i'                            # set these modes on users at connect


[ channels ]

    automodes = '+ntqo +user +user'             # set these modes as users enter channel


[ limit ]

    # the maximum number of:

    connection  = 100                           # connections
    perip       = 3                             # local  connections per IP address
    globalperip = 5                             # global connections per IP address
    client      = 80                            # users (currently unused)
    bytes_line  = 2048                          # bytes per line
    lines_sec   = 30                            # lines per second

    # the maximum number of characters in:

    nick        = 32                            # nicknames
    topic       = 1000                          # channel topics
    kickmsg     = 300                           # kick messages
    channelname = 50                            # channel names
    away        = 100                           # away messages


[ file ]

    motd = 'etc/ircd.motd'                      # message of the day file


[ ping: server ]

    frequency = 20                              # how often to ping servers
    timeout   = 500                             # how long until dropping servers


[ ping: user ]

    message   = 'Ping timeout'                  # message for ping timeouts
    frequency = 30                              # how often to ping users
    timeout   = 120                             # how long until dropping users


[ listen: 0.0.0.0 ]

    port = [6667..6669, 7000]                   # unsecured listening ports


[ connect: server2.example.com ]

    address          = '192.168.1.5'            # IP address for connections
    port             = 7000                     # port on which link will take place
    send_password    = 'k'                      # password to send (plaintext)
    receive_password = '13fbd79c3d390e5d6585a21e11ff5ec1970cff0c' # password to receive
    encryption       = 'sha1'                   # encryption of the receive password
    autoconnect      = off                      # connect automatically


[ operclass: local ]

    flags = ['kill', 'see_invisible', 'rehash'] # flags for local opers


[ operclass: global ]

    extends = 'local'                           # global opers inherit all flags in local
    flags   = ['gkill', 'grehash']              # flags specific to global opers and up


[ operclass: netadmin ]

    extends = 'global'                          # netadmins inherit global and local flags
    flags   = ['grant']                         # flags specific to netadmins only
    notices = ['all']                           # server notice flags


[ oper: admin ]

    class      = 'netadmin'                     # oper class (optional)
    host       = ['*@*']                        # accept authentication from these
    password   = '13fbd79c3d390e5d6585a21e11ff5ec1970cff0c' # password
    encryption = 'sha1'                         # encryption of above password
    flags      = ['all']                        # flags for this oper (optional)
    
    
