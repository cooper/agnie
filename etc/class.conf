################################################################################
###                                                                          ###
###           ʌ                                                 ʌ            ###
###          / \             COPY BEFORE EDITING               / \           ###
###         / ! \            !!!!!!!!!!!!!!!!!!!              / ! \          ###
###         ¯¯¯¯¯                                             ¯¯¯¯¯          ###
################################################################################
#
# /!\ If you intend to edit this, copy it to another filename and then       /!\
# /!\ change the include statement at the bottom of your ircd.conf!          /!\
#
# /!\ If you intend to edit this, copy it to another filename and then       /!\
# /!\ change the include statement at the bottom of your ircd.conf!          /!\
#
# /!\ If you intend to edit this, copy it to another filename and then       /!\
# /!\ change the include statement at the bottom of your ircd.conf!          /!\
#
################################################################################
###                                                                          ###
###           ʌ                                                 ʌ            ###
###          / \             COPY BEFORE EDITING               / \           ###
###         / ! \            !!!!!!!!!!!!!!!!!!!              / ! \          ###
###         ¯¯¯¯¯                                             ¯¯¯¯¯          ###
################################################################################


# Connection classes
#
# A connection can belong to only one class; however, classes can inherit from
# each other. Matching is determined by the following:
#
#   allow_users     if specified, users matching this ident@host mask will fit
#                   the class
#
#   allow_servers   if specified, servers matching this server name mask will
#                   fit the class
#
#   priority        if a connection matches more than one class, the one with
#                   the highest priority will be chosen. if no priority is
#                   specified, it is equal to the number of non-wildcard
#                   characters in allow_users or allow_servers, meaning the
#                   more specific masks have a higher priority

[ class: default ]

    # Base class for all connections

    max_perip       = 3                         # local  connections per IP address
    max_globalperip = 5                         # global connections per IP address
    max_client      = 80                        # users

[ class: users ]

    # Base class for all users

    extends         = 'default'                 # inherit from default
    allow_users     = '*@*'                     # allow all users to fit this class
    
    max_bytes_line  = 2048                      # bytes per line
    max_lines_sec   = 30                        # lines per second
    max_channel     = 100                       # channels a user can be in at once
    max_monitor     = 100                       # monitor entries; off = unlimited
    
    ping_freq       = 30                        # how often to send pings
    ping_timeout    = 120                       # seconds with no pong to drop user

[ class: lanusers ]

    # Example user class with increased limits, requiring a specified mask
    # and password

    extends         = 'users'                   # inherit from users
    allow_users     = '*@192.168.*'             # allow users on LAN
    max_bytes_line  = 4096                      # increased limits
    max_lines_sec   = 60
    
    # Password (for PASS command) and encryption (NOT YET SUPPORTED)
    # Use ./juno mkpasswd to generated an encrypted password.
    # Accepted crypts: sha1, sha224, sha256, sha384, sha512, md5, none
    
    password        = '13fbd79c3d390e5d6585a21e11ff5ec1970cff0c'
    encryption      = 'sha1'

[ class: servers ]

    # Base class for all servers

    extends         = 'default'                 # inherit from default
    allow_servers   = '*'                       # allow all servers to fit this class
    
    ping_freq       = 20                        # how often to send pings
    ping_timeout    = 300                       # seconds with no pong to drop server
    ping_warn       = 60                        # seconds to warn about pings
    
    delta_max       = 120                       # max time delta in seconds
    delta_warn      = 30                        # time delta to produce a warning
    
####################
### OPER CLASSES ###
####################

[ class: locop ]

    requires_oper                               # only allow with OPER command
    extends = 'users'
    rehash                                      # local rehash
    see_invisible                               # see invisible users
    see_hidden                                  # see hidden servers
    see_hosts                                   # see real hosts
    see_secret                                  # see secret channels
    set_permanent                               # set permanent channels
    set_large_banlist                           # set large channel lists
    modesync                                    # use MODESYNC command
    squit                                       # disconnect local uplinks
    connect                                     # connect local uplinks
    kill                                        # kill local users

[ class: globop ]

    extends = 'locop'
    grehash                                     # global rehash
    gsquit                                      # global uplink disconnect
    gconnect                                    # global uplink connect
    gkill                                       # kill global users
    modules                                     # MODLOAD, MODUNLOAD, MODRELOAD
    kline                                       # set K-Lines
    dline                                       # set D-Lines
    resv                                        # set nick/channel reserves
    list_bans                                   # view global bans

[ class: netadmin ]

    extends = 'globop'
    gcheckout                                   # checkout any server
    gupdate                                     # update any server
    greload                                     # reload any server
    gconfget                                    # view global configuration
    
[ class: god ]

    extends = 'netadmin'
    gconfset                                    # modify global configuration
    grant                                       # dynamically grant oper flags
    all                                         # all other flags
