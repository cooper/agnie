#!/usr/bin/perl
# Copyright (c) 2010-14, Mitchell Cooper
use warnings; use strict; use 5.010;
foreach my $sig ([qw(__WARN__ WARNING)], [qw(TERM terminate )], [qw(KILL terminate)],
                 [qw(INT    terminate)], [qw(PIPE signalpipe)], [qw(HUP  signalhup)]) {
$SIG{shift @$sig} = sub { safe_call(shift @$sig, @_) } }    
our ($run_dir, $loop, $api, $pool, %v); local $0 = 'juno';

BEGIN {
    defined($run_dir = shift @ARGV) or die "No directory specified";
    die "Run directory does not exist" unless -d $run_dir;
    chdir $run_dir or die "Can't access run directory";
    foreach (map { "$run_dir/lib$_" } ('', qw(/api-engine /evented-object/lib
        /evented-api-engine/lib /evented-configuration/lib /evented-database)))
    { unshift @INC, $_ unless $_ ~~ @INC }
    require Evented::API::Engine;
}
sub get_version { $api->_slurp(undef, undef, "$run_dir/VERSION") }
sub safe_call   { (ircd->can(shift) or return)->(@_)             }

$api = Evented::API::Engine->new(
    mod_inc => ['modules', 'lib/evented-api-engine/mod'],
    log_sub => sub { say $_[1] }
);
our $VERSION = get_version() or die "Can't read VERSION";

$api->load_module('ircd') or exit 1;
ircd::loop();