This file lists the goals of the major versions of juno-ircd.

Key
--------------------------

[ ] = planned feature has not yet been implemented
[P] = feature is partially implemented and is not functional
[/] = plans for this feature were canceled completely
[D] = feature has been implemented and is fully functional

juno-ircd version 6 series
--------------------------

juno6 aims to create full compatibility with nearly all IRC clients by properly
implementing the entire core set of basic IRC commands, modes, and more. juno5 lacks
several crucial user commands such as LIST, STATS, KICK, VERSION, and many more. In
addition to these compatibility changes, juno6 will include major improvements to its
several APIs, its linking protocol, and its configuration. Many of these will be 
accomplished through the implementation of the EventedObject framework.

[ ] 1. improved support for basic IRC commands

        a. LIST command
        b. KICK command
        c. INVITE command
        d. STATS command
        e. LINKS command
        f. SQUIT command
        g. CONNECT command (currently works locally only)
        h. TIME command
        i. to be continued...

[ ] 2. built-in database support

        a. modules will no longer provide their own databases
        b. instead, a single database will be used
        c. APIs for modifying and accessing the database will be included
        d. SQLite will be used
  
[ ] 3. user numeric API

        a. modules will be able to register user numerics.
        
[ ] 4. changes to configuration

        a. configuration will be database-style rather than file-style
        b. configuration values will be modified automatically
        c. no need for rehashing due to this database approach
        d. configuration values can be sent over the linking protocol
        e. a setup wizard will be included with juno to set configuration initial config
        f. modules will be capable of providing default configuration values
        g. an Evented::Configuration parser will be included with juno to compile a
           traditional juno configuration into the configuration database.
        h. events will be fired when configuration values are changed.
            aa. listening can be updated according to these events

[ ] 5. improved mode system

        a.
        b.
        c.

[ ] 6. remove JELP from core and merge it into a module along with the core JELP commands
       in order to allow multiple linking protocols rather than strictly JELP.
       
        a. create an API that allows parsers to be bound to certain ports
        b. create a module that implements the TS6 protocol

[ ] 7. support IRCv3 CAP.

        a. add SASL support.
        b. add multi-prefix support.
        c. etc...
        
